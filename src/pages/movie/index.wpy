<style>
  .s-tit {
    padding-top: 20px;
    font-size: 24px;
    text-align: center;
  }
  .s-tit-sub {
    padding: 10px 20px;
    font-size: 20px;
  }
  .s-inp {
    padding: 5px 20px;
    padding-left: 60px;
    position: relative;
  }
  .s-inp-tit {
    position: absolute;
    left: 20px;
    line-height: 42px;
  }
  .s-inp input {
    border-bottom: 1px solid #dfdfdf;
    padding: 8px 0; 
  }
  .s-text {
    padding: 10px 20px;
    font-size: 18px;
  }
  .s-sm {
    padding-left: 40px;
    font-size: 12px;
  }
</style>
<template>
  <view class="container">
    <view class="s-tit">计算器</view>
    <view class="s-inp">
      <text class="s-inp-tit">年：</text>
      <input  bindinput="bindNian" type="number" placeholder="请输入年" value="{{nian}}"/>
    </view>
    <view class="s-inp">
      <text class="s-inp-tit">月：</text>
      <input  bindinput="bindYue" type="number" placeholder="请输入月"/>
    </view>
    <view class="s-inp">
      <text class="s-inp-tit">日：</text>
      <input  bindinput="bindRi" type="number" placeholder="请输入日" value="{{ri}}"/>
    </view>
    <view class="s-text">当前时间：
      <text>{{nowDateStr}}</text>
    </view>
    <view class="s-tit-sub">计算得：</view>
    <view class="s-text">
      剩余月：
      <text>{{jsyue}}</text>
      <text class="s-sm" wx:if="{{endDate}}">({{nextDateStr}}~{{endDateStr}})</text>
    </view>
    <view class="s-text">
      剩余天：
      <text>{{jsri}}</text>
      <text class="s-sm" wx:if="{{endDate}}">({{nowDateStr}}~{{nextDateStr}})</text>
    </view>
   
  </view>
</template>

<script>
  import wepy from 'wepy';
  export default class Index extends wepy.page {
    config = {
      "navigationBarTitleText": "工具"
    };
    components = {
    };
    data = {
      nian: '',
      yue: '',
      ri: 1,
      jsyue: 0,
      jsri: 0,
      endDate: null,
      endDateStr: '',
      nowDate: new Date(),
      nowDateStr: '',
      nextDate: new Date(),
      nextDateStr: '',
    };
    methods = {
      bindNian (e) {
        this.nian = e.detail.value
        this.changeDate();
      },
      bindYue (e) {
        this.yue = e.detail.value
        this.changeDate();
      },
      bindRi (e) {
        this.ri = e.detail.value
        this.changeDate();
      },
    };
    events = {};
    async onLoad() {
      // 时间格式化处理  date.Format('yyyy-MM-dd hh:mm:ss')
      Date.prototype.Format = function (fmtTemp) { // author: meizz
        let fmt = fmtTemp
        const o = {
          'M+': this.getMonth() + 1,                 // 月份
          'd+': this.getDate(),                    // 日
          'h+': this.getHours(),                   // 小时
          'm+': this.getMinutes(),                 // 分
          's+': this.getSeconds(),                 // 秒
          'q+': Math.floor((this.getMonth() + 3) / 3), // 季度
          S: this.getMilliseconds()             // 毫秒
        }
        if (/(y+)/.test(fmt)) { fmt = fmt.replace(RegExp.$1, (`${this.getFullYear()}`).substr(4 - RegExp.$1.length)) }
        for (const k in o) {
          if (new RegExp(`(${k})`).test(fmt)) { fmt = fmt.replace(RegExp.$1, (RegExp.$1.length === 1) ? (o[k]) : ((`00${o[k]}`).substr((`${o[k]}`).length))) }
        }
        return fmt
      }
      this.nowDateStr = this.nowDate.Format('yyyy-MM-dd')
      this.nian = this.nowDate.Format('yyyy')
    };
    async getMovies() {};
    changeDate() {
      console.log(this.nian+'-'+this.yue+'-'+this.ri);
      if (this.nian && this.yue && this.ri) {
        const dateTemp = new Date(this.nian+'-'+this.yue+'-'+this.ri)
        if (dateTemp && dateTemp != 'Invalid Date' && dateTemp > this.nowDate) {
          this.endDate = dateTemp
          this.endDateStr = this.endDate.Format('yyyy-MM-dd')
          this.jsyue = this.endDate.getMonth() - this.nowDate.getMonth()
          if (this.ri/1 > this.nowDate.Format('d')/1) {
            this.nextDate.setMonth(this.nowDate.getMonth(),this.ri)
          } else {
            this.jsyue = this.jsyue  - 1
            this.nextDate.setMonth((this.nowDate.getMonth() + 1),this.ri)
          }
          this.nextDateStr = this.nextDate.Format('yyyy-MM-dd')
          this.jsri = (this.nextDate - this.nowDate) / (24*60*60*1000)
          this.jsri = this.jsri.toFixed()
        } else {
          this.errorChange()
        }
      } else {
        this.errorChange()
      }
      this.$apply();
    }
    errorChange() {
      this.endDate = null 
      this.endDateStr = ''
      this.nextDate = new Date()
      this.nextDateStr = ''
      this.jsyue = 0
      this.jsri = 0
    }
  }
</script>